version: 2.1

# Specify working directories for each of the PHP versions we're testing with
# since CircleCI can't expand environment variables in the value for working_dir
workdir-56: &workdir-56
  working-directory: ./reporesults/5.6

workdir-73: &workdir-73
  working-directory: ./reporesults/7.3

workdir-80: &workdir-80
  working-directory: ./reporesults/8.0

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/php

create: &create
  <<: *defaults
  steps:
    - checkout
    - run:
        name: Install Docker Compose
        command: |
          curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
          chmod +x ~/docker-compose
          sudo mv ~/docker-compose /usr/local/bin/docker-compose
    - restore_cache:
        key: v1-dependencies-{{ checksum "composer.lock" }}
    - run:
        name: Install all required development/test composer dependencies
        command: php composer.phar --dev install
    - save_cache:
        key: v1-dependencies-{{ checksum "composer.lock" }}
        paths:
          - inc/
    - run:
        name: Permission updates
        command: sudo chmod -R 777 tests/_output/
    - run:
        name: Prepare log directories
        command: |
          mkdir -p build/logs/coverage
          mkdir -p build/logs/unittests
          mkdir -p build/logs/phpmetrics
    - persist_to_workspace:
        root: ~/repo
        paths:
          - "*"

shared-linting: &shared-linting
  <<: *create
  steps:
    - run:
        name: Check for PHP parse errors
        command: |
          find ./ -type -f -name '*.php' -print0 | xargs -0 -n1 -P4 php -l -n | (! grep -v "No syntax errors found" )


github-release: &github-release
  working_directory: ~/repo
  docker:
    - image: cibuilds/github
  steps:
    - checkout
    - run:
        name: Display GIT tag file
        command: |
          VERSION=$(cat ./TAG)
          echo "${VERSION}"
    - run:
        name: Create the GitHub release
        command: build_env/create_release.sh

workflows:
  test_plugin:
    jobs:
      - wpcs-tests
      - unittests

jobs:
  wpcs-tests:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.2
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Install Composer
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('https://composer.github.io/installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer invalid'; unlink('composer-setup.php'); } echo PHP_EOL;"
            php composer-setup.php
            php -r "unlink('composer-setup.php');"
      - run:
          name: Display PHP information
          command: |
            php -v
            php composer.phar --version
      - restore_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
      - run:
          name: Install all required development/test composer dependencies
          command: php composer.phar install
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - inc/
      - run:
          name: Permission updates
          command: sudo chmod -R 777 tests/_output/
      - run:
          name: Prepare log directories
          command: |
            mkdir -p build/logs/coverage
            mkdir -p build/logs/unittests
            mkdir -p build/logs/phpmetrics
      - run:
          name: Start Wordpress Test Containers
          command: make start
      - run:
          name: Import WordPress data for testing purposes
          command: make db-import
      - run:
          name: Run code style tests
          command: make code-style-tests
      - persist_to_workspace:
          root: ~/repo
          paths:
            - "*"

  unittests:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.2
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Install Composer
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('https://composer.github.io/installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer invalid'; unlink('composer-setup.php'); } echo PHP_EOL;"
            php composer-setup.php
            php -r "unlink('composer-setup.php');"
      - run:
          name: Display PHP information
          command: |
            php -v
            php composer.phar --version
      - restore_cache:
          key: v1-dependencies-{{ checksum "composer.lock" }}
      - run:
          name: Install all required development/test composer dependencies
          command: php composer.phar install
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.lock" }}
          paths:
            - inc/
      - run:
          name: Permission updates
          command: sudo chmod -R 777 tests/_output/
      - run:
          name: Prepare log directories
          command: |
            mkdir -p build/logs/coverage
            mkdir -p build/logs/unittests
            mkdir -p build/logs/phpmetrics
      - run:
          name: Start Wordpress Test Containers
          command: make start
      - run:
          name: Import WordPress data for testing purposes
          command: make db-import
      - run:
          name: Run code style tests
          command: make unit-tests
      - persist_to_workspace:
          root: ~/repo
          paths:
            - "*"

#  all-tests:
#    <<: *defaults
#    steps:
#      - run:
#          name: Start the WordPress Unit Test stack (docker-compose)
#          command: make start
#      - run:
#          name: Import WordPress data for testing purposes
#          command: make db-import
#      - run:
#          name: Run plugin tests (with coverage)
#          command: make tests
